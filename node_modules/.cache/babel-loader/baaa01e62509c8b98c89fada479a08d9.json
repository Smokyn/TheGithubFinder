{"ast":null,"code":"import _slicedToArray from \"/home/smokyn/Documents/thegithubfinder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/smokyn/Documents/thegithubfinder/src/components/users/Search.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (text === \"\") {\n      setAlert(\"Please enter something\", \"light\");\n    } else {\n      searchUsers(this.state.text);\n      setText(\"\");\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/home/smokyn/Documents/thegithubfinder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","onSubmit","event","preventDefault","state","onChange","target","value","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA,oBAC3CN,QAAQ,CAAC,EAAD,CADmC;AAAA;AAAA,QAC5DO,IAD4D;AAAA,QACtDC,OADsD;;AAGnE,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfD,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWL,IAAZ,CAAX;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMK,QAAQ,GAAGH,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAjC;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEN,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGT,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CArCD;;AAuCAH,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,WAAW,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UADX;AAEjBb,EAAAA,UAAU,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UAFV;AAGjBd,EAAAA,SAAS,EAAEH,SAAS,CAACkB,IAAV,CAAeD,UAHT;AAIjBZ,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC;AAJR,CAAnB;AAOA,eAAehB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({ searchUsers, showClear, clearUsers, setAlert }) => {\n  const [text, setText] = useState(\"\");\n\n  const onSubmit = event => {\n    event.preventDefault();\n    if (text === \"\") {\n      setAlert(\"Please enter something\", \"light\");\n    } else {\n      searchUsers(this.state.text);\n      setText(\"\");\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n  return (\n    <div>\n      <form className='form' onSubmit={onSubmit}>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}