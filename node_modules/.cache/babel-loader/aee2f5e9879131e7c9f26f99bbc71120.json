{"ast":null,"code":"var _jsxFileName = \"/home/smokyn/Documents/thegithubfinder/src/components/users/Search.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers\n}) => {\n  state = {\n    text: \"\"\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.text === \"\") {\n      this.props.setAlert(\"Please enter something\", \"light\");\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: \"\"\n      });\n    }\n  };\n\n  const onChange = event => this.setState({\n    [event.target.name]: event.target.value\n  });\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: this.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: this.state.text,\n    onChange: this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/home/smokyn/Documents/thegithubfinder/src/components/users/Search.js"],"names":["React","PropTypes","Search","searchUsers","showClear","clearUsers","state","text","onSubmit","event","preventDefault","props","setAlert","setState","onChange","target","name","value","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA4C;AACzDC,EAAAA,KAAK,GAAG;AACNC,IAAAA,IAAI,EAAE;AADA,GAAR;;AAIA,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,WAAKI,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACD,KAFD,MAEO;AACL,WAAKD,KAAL,CAAWR,WAAX,CAAuB,KAAKG,KAAL,CAAWC,IAAlC;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;AACF,GARD;;AAUA,QAAMO,QAAQ,GAAGL,KAAK,IACpB,KAAKI,QAAL,CAAc;AAAE,KAACJ,KAAK,CAACM,MAAN,CAAaC,IAAd,GAAqBP,KAAK,CAACM,MAAN,CAAaE;AAApC,GAAd,CADF;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAE,KAAKT,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAKE,IAAA,QAAQ,EAAE,KAAKO,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGV,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAzCD;;AA2CAH,MAAM,CAACgB,SAAP,GAAmB;AACjBf,EAAAA,WAAW,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADX;AAEjBf,EAAAA,UAAU,EAAEJ,SAAS,CAACkB,IAAV,CAAeC,UAFV;AAGjBhB,EAAAA,SAAS,EAAEH,SAAS,CAACoB,IAAV,CAAeD,UAHT;AAIjBR,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,IAAV,CAAeC;AAJR,CAAnB;AAOA,eAAelB,MAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({ searchUsers, showClear, clearUsers }) => {\n  state = {\n    text: \"\"\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    if (this.state.text === \"\") {\n      this.props.setAlert(\"Please enter something\", \"light\");\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({ text: \"\" });\n    }\n  };\n\n  const onChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  return (\n    <div>\n      <form className='form' onSubmit={this.onSubmit}>\n        <input\n          type='text'\n          name='text'\n          placeholder='Search Users...'\n          value={this.state.text}\n          onChange={this.onChange}\n        />\n        <input\n          type='submit'\n          value='Search'\n          className='btn btn-dark btn-block'\n        />\n      </form>\n      {showClear && (\n        <button className='btn btn-light btn-block' onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}