{"ast":null,"code":"var _jsxFileName = \"/home/smokyn/Documents/thegithubfinder/src/components/users/User.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  render() {\n    const _this$props$user = this.props.user,\n          name = _this$props$user.name,\n          avatar_url = _this$props$user.avatar_url,\n          location = _this$props$user.location,\n          bio = _this$props$user.bio,\n          blog = _this$props$user.blog,\n          login = _this$props$user.login,\n          html_url = _this$props$user.html_url,\n          followers = _this$props$user.followers,\n          following = _this$props$user.following,\n          public_repos = _this$props$user.public_repos,\n          public_gists = _this$props$user.public_gists,\n          hireable = _this$props$user.hireable;\n    const loading = this.props.loading;\n\n    if (loading) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Back To Search\"), \"Hireable: \", \"\", hireable ? React.createElement(\"i\", {\n      className: \"fas fa-check text-succes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"all-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: avatar_url,\n      alt: \"\",\n      className: \"round-img\",\n      style: {\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Location: \", location)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, bio && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, bio)), React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Visit Github Profile\"))));\n  }\n\n}\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/home/smokyn/Documents/thegithubfinder/src/components/users/User.js"],"names":["React","Component","Fragment","Spinner","PropTypes","Link","User","componentDidMount","props","getUser","match","params","login","render","user","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","loading","width","propTypes","bool","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport class User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n  }\n\n  static propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user;\n\n    const { loading } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    return (\n      <Fragment>\n        <Link to='/' className='btn btn-light'>\n          Back To Search\n        </Link>\n        Hireable: {\"\"}\n        {hireable ? (\n          <i className='fas fa-check text-succes' />\n        ) : (\n          <i className='fas fa-times-circle text-danger' />\n        )}\n        <div className='card grid-2'>\n          <div className='all-center'>\n            <img\n              src={avatar_url}\n              alt=''\n              className='round-img'\n              style={{ width: \"150px\" }}\n            />\n            <h1>{name}</h1>\n            <p>Location: {location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className='btn btn-dark my-1'>\n              Visit Github Profile\n            </a>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}